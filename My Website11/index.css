body {
    background-image: url(bg.png);
    background-repeat: no-repeat;
    background-size: cover;
  }
    ul{
      margin: 10px;
      width: 1200px;
      display: flex;
      flex-direction: row;
      list-style:none ;
    
  }
  li{
      margin: auto;
      color: black;
      font-size: 30px;
      cursor: pointer;
  }
  li:after{
  display: block;
  }
  li:hover:after{
      transform: scaleX(1);
  }
  

input::placeholder{
  opacity: 1;
}
input:focus, 
input:not(:placeholder-shown){
  width: 250px;
  
}
.container{
  position: absolute;
  top: 50%;
  left: 50%;
  transform: translate(-50% , -50%);
  width: fit-content;
}
@keyframes typing {
0%  {
  width: 0;
}
20%{
  width: 20%;
}
40%{
  width: 20%;
}
100%{
  width: 100%;
}
}

h1{
  width: 0%;
  overflow: hidden;
  border-right: .15em ;
  white-space: nowrap;
  color: black;
  animation: typing 4.5s steps(60,end) forwards,blink-caret .85s step-end infinite;
}
span{
  color: black;
}

button {
  position: relative;
  width: 130px;
  height: 35px;
  border-radius: 30px;
  background-color: white;
  border: 1px #08c solid;
  overflow: hidden;
}

.text1 {
  font-size: 15px;
  font-weight: 600;
  margin-left: 22%;
}

.text2 {
  position: absolute;
  top: 25%;
  left: -50px;
  font-weight: 700;
  font-size: 14px;
  color: white;
}

.icon {
  position: absolute;
  top: 0;
  left: 0;
  transition: transform 0.5s;
}

.icon::before {
  position: absolute;
  left: -100px;
  top: 0;
  z-index: -1;
  content: '';
  width: 130px;
  height: 33px;
  border-radius: 30px;
  background-color: #08c;
}

button:hover .icon {
  transform: translateX(96px);
  transition: transform 0.5s;
}

button:hover .text2 {
  transform: translateX(100px);
  transition: transform 0.6s;
}

button:active {
  transform: scale(1.03);
}
ul{
  margin: 2%;
  width: 1200px;
  display: flex;
  flex-direction: row;
  list-style:none ;
  padding: 10px 0;
  border-radius: 222px;
  border: 0.1px solid #000;
  background-color: ;
  box-shadow: 0 4px 8px 0 #000 , 0 6px 20px 0 
  rgba(94, 32, 32, 0.19);
}
li{
  margin: auto;
  color: #000;
  font-size: 20px;
  cursor: pointer;
}
li:after{
display: block;
}
li:hover:after{
  transform: scaleX(1);
}


.iconi {
  position: absolute;
  top: 0;
  left: 0;
  transition: transform 0.5s;
}

.iconi::before {
  position: absolute;
  left: -100px;
  top: 0;
  z-index: -1;
  content: '';
  width: 130px;
  height: 33px;
  border-radius: 30px;
  background-color: rgb(204, 0, 71);
}

button:hover .iconi {
  transform: translateX(96px);
  transition: transform 0.5s;
}

button:hover .text2 {
  transform: translateX(100px);
  transition: transform 0.6s;
}

button:active {
  transform: scale(1.03);
}
.rating {
  display: inline-block;
}

.rating input {
  display: none;
}

.rating label {
  float: right;
  cursor: pointer;
  color: #ccc;
  transition: color 0.3s;
}

.rating label:before {
  content: '\2605';
  font-size: 30px;
}

.rating input:checked ~ label,
.rating label:hover,
.rating label:hover ~ label {
  color: #ffd900;
  transition: color 0.3s;
}
.radio-input input {
  display: none;
}

.radio-input {
  display: -webkit-box;
  display: -ms-flexbox;
  display: flex;
  -webkit-box-orient: vertical;
  -webkit-box-direction: normal;
      -ms-flex-direction: column;
          flex-direction: column;
  padding: 12px;
  background: #fff;
  color: #000;
  border-radius: 10px;
  -webkit-box-shadow: 0px 87px 78px -39px rgba(0,0,0,0.4);
          box-shadow: 0px 87px 78px -39px rgba(0,0,0,0.4);
  width: 320px;
}

.info {
  margin-bottom: 10px;
  display: -webkit-box;
  display: -ms-flexbox;
  display: flex;
  -webkit-box-align: center;
      -ms-flex-align: center;
          align-items: center;
  -webkit-box-pack: justify;
      -ms-flex-pack: justify;
          justify-content: space-between;
}

.question {
  color: rgb(49, 49, 49);
  font-size: 1rem;
  line-height: 1rem;
  font-weight: 800;
}

.steps {
  background-color: rgb(0, 0, 0);
  padding: 4px;
  color: #fff;
  border-radius: 4px;
  font-size: 12px;
  line-height: 12px;
  font-weight: 600;
}

.radio-input  label {
  display: -webkit-box;
  display: -ms-flexbox;
  display: flex;
  background-color: #fff;
  padding: 14px;
  margin: 8px 0 0 0;
  font-size: 13px;
  font-weight: 600;
  border-radius: 10px;
  cursor: pointer;
  border: 1px solid rgba(187, 187, 187, 0.164);
  color: #000;
  -webkit-transition: .3s ease;
  transition: .3s ease;
}

.radio-input  label:hover {
  background-color: rgba(24, 24, 24, 0.13);
  border: 1px solid #bbb;
}

.result {
  margin-top: 10px;
  font-weight: 600;
  font-size: 12px;
  display: none;
  -webkit-transition: display .4s ease;
  transition: display .4s ease;
}

.result.success {
  color: green;
}

.result.error {
  color: red;
}

.radio-input input:checked + label {
  border-color: red;
  color: red;
}

.radio-input input[value="value-2"]:checked + label {
  border-color: rgb(22, 245, 22);
  color: rgb(16, 184, 16);
}



.radio-input:has(input[value="value-2"]:checked) .result.success {
  display: -webkit-box;
  display: -ms-flexbox;
  display: flex;
}

.radio-input:has(input:not([value="value-2"]):checked ) .result.error {
  display: -webkit-box;
  display: -ms-flexbox;
  display: flex;
}@import url('https://fonts.googleapis.com/css?family=Inconsolata|Lato:300,400,700');
html, body, h1, h2, h3, h4, h5, h6, p, li, ol, ul, pre {
	margin: 0;
	padding: 0;
}
html, body { min-height: 100%; }

body {
	background-color: #345;
	background-image: linear-gradient(to bottom, #0009, transparent);
	color: #eee;
	font-family: 'Lato', sans-serif;
	font-size: 62.5%;
	padding: 0 20px;
	box-sizing: border-box;
}
code {
	background: #fff1;
	font-family: 'Inconsolata', monospace;
	padding: .2em .4em;
}

.content {
	background-color: #fff;
	border-radius: 8px;
	box-sizing: border-box;
	color: #666;
	font-size: 1.6em;
	line-height: 1.4em;
	margin: 20px auto;
	margin-top: 80px;
	padding: 20px;
	width: 100%;
	max-width: 800px;
}
.content ul {
	margin: .5em 2em;
	padding: 0;
}

#footer {
	background-color: #246c;
	background-image: linear-gradient(to bottom, transparent, #0009);
	border-top: 1px solid #fff3;
	box-shadow: inset 0 1px 0 #fff3, 0 0 32px #000;
	overflow: hidden;
	padding: 8px;
	position: fixed;
	left: 0;
	right: 0;
	bottom: 0;
	z-index: 9001;
}
#footer a {
	color: #85c6f6;
	padding: 1em 0;
	text-decoration: none;
}
#footer ul {
	display: flex;
	list-style: none;
	justify-content: center;
	font-size: 2em;
	font-weight: 300;
}
#footer ul li {
	padding: 0 .5em;
}

/* Appearance */
.links {
	background-color: #123;
	background-image: linear-gradient(to bottom, #0003, transparent);
	border-bottom: 1px solid #0003;
	box-shadow: 0 0 32px #0003;
	font-size: 2em;
	font-weight: 300;
}
.links > a {
	color: #9ab;
	padding: .75em;
	text-align: center;
	text-decoration: none;
	transition: all .5s;
}
.links > a:hover {
	background: #ffffff06;
	color: #adf;
}
.links > .line {
	background: #68a;
	height: 1px;
	pointer-events: none;
}

/* The Magic */
#header {
	position: fixed;
	top: 0;
	left: 0;
	right: 0;
}
.links {
	display: grid;
	grid-template-columns: repeat(var(--items), 1fr);
	position: relative;
}
.links > .line {
	opacity: 0;
	transition: all .5s;
	position: absolute;
	bottom: 0;
	left: var(--left, calc(100% / var(--items) * (var(--index) - 1)));
	width: var(--width, calc(100% / var(--items)));
	--index: 0;
}
.links > a:hover ~ .line {
	opacity: 1;
}

.links > a:nth-of-type(1):hover ~ .line { --index: 1; }
.links > a:nth-of-type(2):hover ~ .line { --index: 2; }
.links > a:nth-of-type(3):hover ~ .line { --index: 3; }
.links > a:nth-of-type(4):hover ~ .line { --index: 4; }
.links > a:nth-of-type(5):hover ~ .line { --index: 5; }
.links > a:nth-of-type(6):hover ~ .line { --index: 6; }
.links > a:nth-of-type(7):hover ~ .line { --index: 7; }
.links > a:nth-of-type(8):hover ~ .line { --index: 8; }
.links > a:nth-of-type(9):hover ~ .line { --index: 9; }
.links > a:nth-of-type(10):hover ~ .line { --index: 10; }
.links > a:last-of-type:hover ~ .line { --index: var(--items); }



.card {
  width: 290px;
  height: 254px;
  background: #07182E;
  position: relative;
  display: flex;
  place-content: center;
  place-items: center;
  overflow: hidden;
  border-radius: 20px;
}

.card h2 {
  z-index: 1;
  color: white;
  font-size: 2em;
}

.card::before {
  content: '';
  position: absolute;
  width: 100px;
  background-image: linear-gradient(180deg, rgb(0, 183, 255), rgb(255, 48, 255));
  height: 130%;
  animation: rotBGimg 3s linear infinite;
  transition: all 0.2s linear;
}

@keyframes rotBGimg {
  from {
    transform: rotate(0deg);
  }

  to {
    transform: rotate(360deg);
  }
}

.card::after {
  content: '';
  position: absolute;
  background: #07182E;
  ;
  inset: 5px;
  border-radius: 15px;
}  
a{
  color: white;
  background-color: transparent;
  text-decoration: none;
}
.button {
  --color: #cd74e8;
  padding: 0.8em 1.7em;
  background-color: transparent;
  border-radius: .3em;
  position: relative;
  overflow: hidden;
  cursor: pointer;
  transition: .5s;
  font-weight: 200;
  font-size: 14px;
  border: 1px solid;
  font-family: inherit;
  text-transform: uppercase;
  color: var(--color);
  z-index: 1;
 }
 
 .button::before, .button::after {
  content: '';
  display: block;
  width: 50px;
  height: 50px;
  transform: translate(-50%, -50%);
  position: absolute;
  border-radius: 50%;
  z-index: -1;
  background-color: var(--color);
  transition: 1s ease;
 }
 
 .button::before {
  top: -1em;
  left: -1em;
 }
 
 .button::after {
  left: calc(100% + 1em);
  top: calc(100% + 1em);
 }
 
 .button:hover::before, .button:hover::after {
  height: 410px;
  width: 410px;
 }
 
 .button:hover {
  color: rgb(10, 25, 30);
 }
 
 .button:active {
  filter: brightness(.8);
 }
 